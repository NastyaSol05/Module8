version: '3.9'

services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379'

  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    expose:
      - '5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      retries: 5
      timeout: 5s

  web:
    build: .
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: on-failure

  celery-beat:
    build: .
    command: celery -A config beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: on-failure

volumes:
  pg_data:
